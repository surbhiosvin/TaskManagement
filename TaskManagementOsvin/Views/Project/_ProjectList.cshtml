@*@model List<TaskManagementOsvin.Models.AllProjectsModel>*@
@using System.Configuration
<table class="table table-striped table-bordered table-hover table-header-fixed" id="Data_table_fixed">
    <thead>
        <tr>
            <th>Project Type</th>
            <th>Project Title</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Project Status</th>
            <th>Project URL</th>
            <th>Action</th>
            <th>Action</th>
            <th>Action</th>
            <th>Archive</th>
        </tr>
    </thead>
    @*<tbody>
        @if (Model != null && Model.Count() > 0)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.TypeName</td>
                    <td>@item.ProjectTitle</td>
                    <td class="text-center vertical-center">@(string.IsNullOrEmpty(item.StartDate) ? "NA" : DateTime.ParseExact(item.StartDate,"yyyy/MM/dd",null).ToString("dd-MMM-yyyy"))</td>
                    <td class="text-center vertical-center">@(string.IsNullOrEmpty(item.EndDate) ? "NA" : DateTime.ParseExact(item.EndDate, "yyyy/MM/dd", null).ToString("dd-MMM-yyyy"))</td>
                    <td class="text-center vertical-center"><span class="label label-success">@item.ProjectStatus</span></td>
                    <td class="text-center vertical-center">@(string.IsNullOrEmpty(item.ProjectUrl) ? "NA" : item.ProjectUrl)</td>
                    <td><a href="@Url.Action("ProjectAddendumDetails",new { ProjectId= @item.ProjectId })">Addendums Details</a></td>
                    <td class="text-center vertical-center"><a title="edit" class="btn green-dark" href="@Url.Action("AddUpdateProject",new { ProjectId= @item.ProjectId })">
                        <i class="fa fa-edit"></i>
                        </a></td>
                    <td><a href="@Url.Action("UpdateProjectStatus",new { ProjectId= @item.ProjectId })">Update Status</a></td>
                    <td class="text-center vertical-center"><a href="javascript:" onclick="confirm(@item.ProjectId)" title="Click here to Archive" style="font-size:20px"><i class="fa fa-archive"></i></a></td>
                </tr>
            }
        }
    </tbody>*@
</table>
<script>
    var basehref = '@ConfigurationManager.AppSettings["BaseURL"]';
    var TableDatatablesFixedHeaderCustomized = function () {

        var initDataTable = function () {
            var table = $('#Data_table_fixed');

            var fixedHeaderOffset = 0;
            if (App.getViewPort().width < App.getResponsiveBreakpoint('md')) {
                if ($('.page-header').hasClass('page-header-fixed-mobile')) {
                    fixedHeaderOffset = $('.page-header').outerHeight(true);
                }
            } else if ($('body').hasClass('page-header-menu-fixed')) { // admin 3 fixed header menu mode
                fixedHeaderOffset = $('.page-header-menu').outerHeight(true);
            } else if ($('body').hasClass('page-header-top-fixed')) { // admin 3 fixed header top mode
                fixedHeaderOffset = $('.page-header-top').outerHeight(true);
            } else if ($('.page-header').hasClass('navbar-fixed-top')) {
                fixedHeaderOffset = $('.page-header').outerHeight(true);
            } else if ($('body').hasClass('page-header-fixed')) {
                fixedHeaderOffset = 64; // admin 5 fixed height
            }

            var oTable = table.dataTable({

                // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                "language": {
                    "aria": {
                        "sortAscending": ": activate to sort column ascending",
                        "sortDescending": ": activate to sort column descending"
                    },
                    "emptyTable": "No data available in table",
                    "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "infoEmpty": "No entries found",
                    "infoFiltered": "(filtered1 from _MAX_ total entries)",
                    "lengthMenu": "_MENU_ entries",
                    "search": "Search:",
                    "zeroRecords": "No matching records found"
                },
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "type": "POST",
                    "url": basehref +'/Project/GetProject',
                    "data": function (data) {
                        return data;
                    },
                },
                createdRow: function (row, data, index) {
                    $('td', row).eq(0).addClass('text-center vertical-center');
                    $('td', row).eq(1).addClass('text-center vertical-center');
                    $('td', row).eq(2).addClass('text-center vertical-center');
                    $('td', row).eq(3).addClass('text-center vertical-center');
                    $('td', row).eq(4).addClass('text-center vertical-center');
                    $('td', row).eq(5).addClass('text-center vertical-center');
                    $('td', row).eq(7).addClass('text-center vertical-center');
                    $('td', row).eq(8).addClass('text-center vertical-center');
                    $('td', row).eq(9).addClass('text-center vertical-center');
                },

                // setup rowreorder extension: http://datatables.net/extensions/fixedheader/
                fixedHeader: {
                    header: true,
                    headerOffset: fixedHeaderOffset
                },

                "order": [
                    [0, 'asc']
                ],

                "lengthMenu": [
                    [20, 30, 50, -1],
                    [20, 30, 50, "All"] // change per page values here
                ],
                // set the initial value
                "pageLength": 20,

                // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                // So when dropdowns used the scrollable div should be removed.
                //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
            });
        }

        var destroyTable = function () {
            var table = $('#Data_table_fixed').DataTable();
            table.state.clear();
            table.destroy();
        }
        return {

            //main function to initiate the module
            init: function () {

                if (!jQuery().dataTable) {
                    return;
                }

                initDataTable();
            },
            destroy: function () {
                destroyTable();
            }

        };

    }();

    $(document).ready(function () {
        TableDatatablesFixedHeaderCustomized.init();
    })


    function confirm(projectId) {
        swal({
            title: "Are you sure want to archive?",
            text: "You will find this project in non-archived!",
            type: "info",
            showCancelButton: true,
            confirmButtonClass: "btn-warning",
            confirmButtonText: "Yes, archive it!",
            closeOnConfirm: false,
            showLoaderOnConfirm: true
        }, function () {
            $.ajax({
                type: "POST",
                url: basehref + "/api/Project/UpdateProjectArchive?ProjectId=" + projectId,
                success: function (response) {
                    if (response) {
                        TableDatatablesFixedHeaderCustomized.destroy();
                        TableDatatablesFixedHeaderCustomized.init();
                        setTimeout(function () {
                            swal("Archived!", "Archived Successfully.", "success");
                        }, 1000);
                    }
                    else {
                        setTimeout(function () {
                            swal("Error!", "Error occurred!", "error");
                        }, 1000);
                    }
                },
                error: function () {
                    setTimeout(function () {
                        swal("Error!", "Error occurred!", "error");
                    }, 1000);
                }
            });

        });
    }
</script>